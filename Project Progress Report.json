{
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Helper function to format dates\nfunction formatDate(input) {\n  if (!input || input === '-' || input === '') return '-';\n\n  let date;\n\n  if (typeof input === 'number') {\n    date = new Date(Math.round((input - 25569) * 86400 * 1000));\n  } else {\n    const tryStr = String(input).trim();\n    date = new Date(tryStr);\n\n    if (isNaN(date)) {\n      const parts = tryStr.split(/[-\\\\/]/);\n      if (parts.length === 3) {\n        const [p1, p2, p3] = parts;\n        const isYearFirst = p1.length === 4;\n        const year = isYearFirst ? p1 : p3;\n        const month = p2;\n        const day = isYearFirst ? p3 : p1;\n        date = new Date(`${year}-${month}-${day}`);\n      }\n    }\n  }\n\n  if (isNaN(date)) return '-';\n\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = date.toLocaleString('en-US', { month: 'short' });\n  const year = date.getFullYear();\n\n  return `${day}-${month}-${year}`;\n}\n\n// Group rows by Software Name\nconst grouped = {};\n\nfor (const item of items) {\n  const data = item.json;\n  const software = data[\"Software Name\"] || \"Unknown\";\n\n  if (!grouped[software]) {\n    grouped[software] = [];\n  }\n\n  grouped[software].push(data);\n}\n\n// Build HTML email body with table for each Software group\nlet finalBody = '';\n\nfor (const [software, records] of Object.entries(grouped)) {\n  finalBody += `<h3>Software: ${software}</h3>`;\n  finalBody += `<table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%;\">`;\n  finalBody += `\n    <thead>\n      <tr style=\"background-color:#f2f2f2;\">\n        <th>SL</th>\n        <th>Client Name</th>\n        <th>Stage</th>\n        <th>Start Date</th>\n        <th>End Date</th>\n        <th>Engagement Days</th>\n        <th>Remarks</th>\n      </tr>\n    </thead>\n    <tbody>\n  `;\n\n  records.forEach((r, i) => {\n    const startDate = formatDate(r[\"Implementation Start Date\"]);\n    const endDate = formatDate(r[\"Implementation End Date\"]);\n    const engagementDays = r[\"Engagement Days\"] || '-';\n    const remarks = r.Remarks\n      ? r.Remarks.split('\\n').map(line => line.trim()).join('<br>')\n      : 'N/A';\n\n    finalBody += `\n      <tr>\n        <td style=\"text-align:center;\">${i + 1}</td>\n        <td>${r[\"Client Name\"] || '-'}</td>\n        <td>${r.Stage || '-'}</td>\n        <td style=\"text-align:center;\">${startDate}</td>\n        <td style=\"text-align:center;\">${endDate}</td>\n        <td style=\"text-align:center;\">${engagementDays}</td>\n        <td>${remarks}</td>\n      </tr>\n    `;\n  });\n\n  finalBody += `</tbody></table><br>`;\n}\n\nreturn [{ json: { htmlBody: finalBody } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -600,
        620
      ],
      "id": "19b42629-7fc1-4575-a7cd-d9717ef519ae",
      "name": "Code2"
    },
    {
      "parameters": {
        "sendTo": "ceo@akijresource.com",
        "subject": "=Project Progress Report",
        "message": "=<p>Dear Sir,</p>\n\n<p>The project progress report is shared below for your kind review.</p>\n\n<p><strong>Managerium AVG Implementation</strong><br>Timeline: 3 month 6 days</p>\n<p><strong>PeopleDesk AVG Implementation</strong><br>Timeline: 5 Months 10 Days</p>\n<p><strong>PrimeVAT AVG Implementation</strong><br>Timeline: 1 month 0 days</p>\n\n\n{{ $json.htmlBody }}\n\n<p>Best Regards,<br>\nMd. Al Amin<br>\nCMO & CRO<br>\nAKIJ iBOS</p>\n",
        "options": {
          "appendAttribution": false,
          "ccList": "ceo@ibos.io, cmo@ibos.io, cdo@ibos.io, cto@ibos.io, parash@ibos.io, hadiuzzaman@ibos.io, moinur@ibos.io, sadat@ibos.io"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -380,
        620
      ],
      "id": "8777725b-4c98-4d05-9c42-e9e04fbb3a20",
      "name": "Gmail3",
      "webhookId": "d7a93ef9-2e26-4538-86bb-f65464560e57",
      "credentials": {
        "gmailOAuth2": {
          "id": "lAPzRZXFHU9cYly5",
          "name": "Gmail account 108-Eaccount"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 18,
              "triggerAtMinute": 5
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1000,
        620
      ],
      "id": "9de54b28-1e07-419c-866e-af43001aee1b",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/1sF6RDvtANFgEs1cTmusN4o6a2jH_4bLQxya57cSDD3o/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Status",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1sF6RDvtANFgEs1cTmusN4o6a2jH_4bLQxya57cSDD3o/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -780,
        620
      ],
      "id": "929a4192-3440-40ac-b9df-59f718aebe46",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "4sR5tzJdDMBr0v4L",
          "name": "Google Sheets account 164"
        }
      }
    },
    {
      "parameters": {
        "content": "main Workflow",
        "height": 180,
        "width": 940
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1100,
        600
      ],
      "typeVersion": 1,
      "id": "e0b99583-1b7f-40bb-a872-01940192d7e1",
      "name": "Sticky Note"
    }
  ],
  "connections": {
    "Code2": {
      "main": [
        [
          {
            "node": "Gmail3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5d927d9375747622767f095ddf723e3b731bdcb16f3cc831c46075d0d192f10c"
  }
}